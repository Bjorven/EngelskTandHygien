// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TandVark.Data.Data1;

namespace TandVark.Data.Migrations
{
    [DbContext(typeof(TandVerkContext))]
    [Migration("20181121122124_fixesPropName")]
    partial class fixesPropName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TandVark.Data.Data1.TblAppointment", b =>
                {
                    b.Property<int>("FldAppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FldAppointmentBegin");

                    b.Property<DateTime>("FldAppointmentEnd");

                    b.Property<int>("FldDenistIdFK");

                    b.Property<int>("FldPatientFK");

                    b.HasKey("FldAppointmentId");

                    b.HasIndex("FldDenistIdFK");

                    b.HasIndex("FldPatientFK");

                    b.ToTable("TblAppointments");
                });

            modelBuilder.Entity("TandVark.Data.Data1.TblPatient", b =>
                {
                    b.Property<int>("FldPatientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FldAddress");

                    b.Property<string>("FldEmail");

                    b.Property<string>("FldFirstName");

                    b.Property<string>("FldLastName");

                    b.Property<string>("FldPhoneNumber");

                    b.Property<string>("FldSSnumber")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.HasKey("FldPatientId");

                    b.ToTable("TblPatients");
                });

            modelBuilder.Entity("TandVark.Data.Data1.TblUser", b =>
                {
                    b.Property<int>("FldUserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FldAccountName");

                    b.Property<string>("FldPassword");

                    b.Property<int?>("FldUserTypeId");

                    b.HasKey("FldUserId");

                    b.HasIndex("FldUserTypeId");

                    b.ToTable("TblUsers");
                });

            modelBuilder.Entity("TandVark.Data.Data1.TblUserType", b =>
                {
                    b.Property<int>("FldUserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FldEmployeeTypeName");

                    b.HasKey("FldUserTypeId");

                    b.ToTable("TblUserTypes");
                });

            modelBuilder.Entity("TandVark.Data.Data1.TblXray", b =>
                {
                    b.Property<int>("FldXrayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FldAppointmentFK");

                    b.Property<string>("FldXrayURL");

                    b.HasKey("FldXrayId");

                    b.HasIndex("FldAppointmentFK");

                    b.ToTable("TblXrays");
                });

            modelBuilder.Entity("TandVark.Data.Data1.TblAppointment", b =>
                {
                    b.HasOne("TandVark.Data.Data1.TblUser", "FldAppointedDentist")
                        .WithMany("TblAppointment")
                        .HasForeignKey("FldDenistIdFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TandVark.Data.Data1.TblPatient", "FldAppointedPatient")
                        .WithMany("FldAppointment")
                        .HasForeignKey("FldPatientFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TandVark.Data.Data1.TblUser", b =>
                {
                    b.HasOne("TandVark.Data.Data1.TblUserType", "FldUserType")
                        .WithMany("TblUsers")
                        .HasForeignKey("FldUserTypeId");
                });

            modelBuilder.Entity("TandVark.Data.Data1.TblXray", b =>
                {
                    b.HasOne("TandVark.Data.Data1.TblAppointment", "Appointment")
                        .WithMany("FldXrays")
                        .HasForeignKey("FldAppointmentFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
